{"ast":null,"code":"import axios from \"axios\";\n// const LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\nbaseURL = \"https://restro-backend.rahulsingh430.repl.co/\";\n// }\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\n// api.interceptors.request.use(\n//     config => {\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n//         }\n\n//         return config;\n//     },\n//     err => {\n//         console.error(err);\n//     }\n// );\n\nexport default class API {\n  constructor() {\n    this.getPosts = async params => {\n      try {\n        const response = await api.get(\"/posts/\", {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.addPost = async postBody => {\n      const formData = new FormData();\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n      try {\n        const response = await api.post(\"/posts/add/\", formData);\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.deletePost = async id => {\n      try {\n        return await api.delete(`/posts/delete/${id}/`);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.getItems = async category => {\n      let url = \"/item\";\n      if (category) {\n        url += \"?category=\" + category;\n      }\n      const item = await api.get(url).then(response => {\n        return response.data;\n      })\n      // console.log(respone.data)\n      .catch(error => {\n        throw new Error(error);\n      });\n      return item;\n    };\n    this.getReviews = async item_id => {\n      let url = \"/reviews?item_id=\" + item_id;\n      const reviews = await api.get(url).then(response => {\n        // console.log('response', response);\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return reviews;\n    };\n    this.writeReview = async (item_id, name, body, like_count) => {\n      const formData = new FormData();\n      formData.append(\"item\", item_id);\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"like_count\", like_count);\n      const savedReview = await api.post(\"/reviews/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedReview;\n    };\n  }\n}","map":{"version":3,"names":["axios","baseURL","api","create","headers","API","getPosts","params","response","get","data","error","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getItems","category","url","item","then","catch","getReviews","item_id","reviews","writeReview","name","body","like_count","savedReview"],"sources":["C:/Users/zubai/Desktop/restro-frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\r\n// const LOGIN_USER_KEY = 'LOGIN_USER_KEY';\r\n\r\nvar baseURL;\r\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\r\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\r\n// } else {\r\nbaseURL = \"https://restro-backend.rahulsingh430.repl.co/\"\r\n// }\r\n\r\nconst api = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\r\n// api.interceptors.request.use(\r\n//     config => {\r\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\r\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\r\n//         }\r\n\r\n//         return config;\r\n//     },\r\n//     err => {\r\n//         console.error(err);\r\n//     }\r\n// );\r\n\r\nexport default class API {\r\n  getPosts = async (params) => {\r\n    try {\r\n      const response = await api.get(\"/posts/\", { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  };\r\n  addPost = async (postBody) => {\r\n    const formData = new FormData();\r\n\r\n    for (const key in postBody) {\r\n      formData.append(key, postBody[key]);\r\n    }\r\n\r\n    try {\r\n      const response = await api.post(\"/posts/add/\", formData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  };\r\n  deletePost = async (id) => {\r\n    try {\r\n      return await api.delete(`/posts/delete/${id}/`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  };\r\n\r\n  // ////////////////////////////////////\r\n  // Item\r\n  // ////////////////////////////////////\r\n\r\n  getItems = async (category) => {\r\n    let url = \"/item\";\r\n    if (category) {\r\n      url += \"?category=\" + category;\r\n    }\r\n\r\n    const item = await api\r\n      .get(url)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      // console.log(respone.data)\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return item;\r\n  };\r\n  ////////////////////////////////\r\n  // Review\r\n  ////////////////////////////////\r\n  getReviews = async (item_id) => {\r\n    let url = \"/reviews?item_id=\" + item_id;\r\n    const reviews = await api\r\n      .get(url)\r\n      .then((response) => {\r\n        // console.log('response', response);\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return reviews;\r\n  };\r\n  writeReview = async (item_id, name, body, like_count) => {\r\n    const formData = new FormData();\r\n    formData.append(\"item\", item_id);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"body\", body);\r\n    formData.append(\"like_count\", like_count);\r\n    const savedReview = await api\r\n      .post(\"/reviews/add/\", formData)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return savedReview;\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}